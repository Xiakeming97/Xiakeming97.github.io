<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Umijs项目使用dva配合redux-persist做持久化处理</title>
      <link href="/2023/05/26/umijs-xiang-mu-shi-yong-dva-zhong-zuo-chi-jiu-hua-chu-li/"/>
      <url>/2023/05/26/umijs-xiang-mu-shi-yong-dva-zhong-zuo-chi-jiu-hua-chu-li/</url>
      
        <content type="html"><![CDATA[<h2 id="为什么要做数据持久化"><a href="#为什么要做数据持久化" class="headerlink" title="为什么要做数据持久化"></a>为什么要做数据持久化</h2><p>在项目中有的数据需要从后端获取同时这个数据又是全局使用的，不能因为一刷新就重新从后端获取。这样不现实，所以就可以使用到数据持久化并且使用<strong>dva</strong>配合<strong>redux-persist</strong>实现的数据持久化改动的代码特别少，可以说是几乎没有。</p><h2 id="教程项目各依赖版本"><a href="#教程项目各依赖版本" class="headerlink" title="教程项目各依赖版本"></a>教程项目各依赖版本</h2><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"react"</span><span class="token operator">:</span> <span class="token string">"17.x"</span><span class="token punctuation">,</span><span class="token property">"react-dom"</span><span class="token operator">:</span> <span class="token string">"17.x"</span><span class="token punctuation">,</span><span class="token property">"redux-persist"</span><span class="token operator">:</span> <span class="token string">"^6.0.0"</span><span class="token punctuation">,</span><span class="token property">"umi"</span><span class="token operator">:</span> <span class="token string">"^3.5.35"</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安装redux-persist"><a href="#安装redux-persist" class="headerlink" title="安装redux-persist"></a>安装redux-persist</h2><p>在umijs项目中开启dva数据状态管理后，可以通过npm的方式来安装redux-persist</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i redux-persist<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="更改Umijs的配置"><a href="#更改Umijs的配置" class="headerlink" title="更改Umijs的配置"></a>更改Umijs的配置</h2><p>在<strong>在src&#x2F;app.js</strong>文件中添加以下配置 </p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> persistStore<span class="token punctuation">,</span>persistReducer <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'redux-persist'</span><span class="token punctuation">;</span><span class="token keyword">import</span> storage <span class="token keyword">from</span> <span class="token string">'redux-persist/lib/storage'</span><span class="token punctuation">;</span><span class="token keyword">const</span> persistConfig <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'root'</span><span class="token punctuation">,</span>  storage<span class="token punctuation">,</span>  <span class="token literal-property property">whitelist</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'enumerate'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 配置白名单 里面写需要配置的名字 也就是dva文件的namespace</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 数据持久化</span><span class="token keyword">const</span> <span class="token function-variable function">persistEnhancer</span> <span class="token operator">=</span>  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token parameter">createStore</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token parameter">reducer<span class="token punctuation">,</span> initialState<span class="token punctuation">,</span> enhancer</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>      <span class="token function">persistReducer</span><span class="token punctuation">(</span>persistConfig<span class="token punctuation">,</span> reducer<span class="token punctuation">)</span><span class="token punctuation">,</span>      initialState<span class="token punctuation">,</span>      enhancer<span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> persist <span class="token operator">=</span> <span class="token function">persistStore</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span>store<span class="token punctuation">,</span> persist <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> dva <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">config</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">extraEnhancers</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">persistEnhancer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="更多资料访问官网"><a href="#更多资料访问官网" class="headerlink" title="更多资料访问官网"></a>更多资料访问<a href="https://github.com/rt2zz/redux-persist">官网</a></h2>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Umijs </tag>
            
            <tag> dva </tag>
            
            <tag> redux-persist </tag>
            
            <tag> 数据持久化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tree在mac中的使用</title>
      <link href="/2023/05/15/tree-zai-mac-zhong-de-shi-yong/"/>
      <url>/2023/05/15/tree-zai-mac-zhong-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在mac电脑中要使用tree需要安装，本教程使用的是<a href="https://brew.sh/index_zh-cn"> Homebrew</a></p><pre class=" language-bash"><code class="language-bash">brew <span class="token function">install</span> tree</code></pre><h2 id="使用tree"><a href="#使用tree" class="headerlink" title="使用tree"></a>使用tree</h2><h3 id="tree命令行参数："><a href="#tree命令行参数：" class="headerlink" title="tree命令行参数："></a>tree命令行参数：</h3><ul><li>-a 显示所有文件和目录。</li><li>-A 使用ASNI绘图字符显示树状图而非以ASCII字符组合。</li><li>-C 在文件和目录清单加上色彩，便于区分各种类型。</li><li>-d 显示目录名称而非内容。</li><li>-D 列出文件或目录的更改时间。</li><li>-f 在每个文件或目录之前，显示完整的相对路径名称。</li><li>-F 在执行文件，目录，Socket，符号连接，管道名称名称，各自加上”*”,”&#x2F;“,”&#x3D;”,”@”,”|“号。</li><li>-g 列出文件或目录的所属群组名称，没有对应的名称时，则显示群组识别码。</li><li>-i 不以阶梯状列出文件或目录名称。</li><li>-I 不显示符合范本样式的文件或目录名称。</li><li>-l 如遇到性质为符号连接的目录，直接列出该连接所指向的原始目录。</li><li>-n 不在文件和目录清单加上色彩。</li><li>-N 直接列出文件和目录名称，包括控制字符。</li><li>-p 列出权限标示。</li><li>-P 只显示符合范本样式的文件或目录名称。</li><li>-q 用”?”号取代控制字符，列出文件和目录名称。</li><li>-s 列出文件或目录大小。</li><li>-t 用文件和目录的更改时间排序。</li><li>-u 列出文件或目录的拥有者名称，没有对应的名称时，则显示用户识别码。</li><li>-x 将范围局限在现行的文件系统中，若指定目录下的某些子目录，其存放于另一个文件系统上，则将该子目录予以排除在寻找范围外。</li></ul><h3 id="使用例子"><a href="#使用例子" class="headerlink" title="使用例子"></a>使用例子</h3><pre class=" language-bash"><code class="language-bash">tree -I <span class="token string">"node_modules"</span> -I <span class="token string">"dist"</span> -I <span class="token string">"*.md"</span> -I <span class="token string">".swc"</span> -I <span class="token string">"*.png"</span> <span class="token operator">></span> tree.md</code></pre><h4 id="代码解释"><a href="#代码解释" class="headerlink" title="代码解释"></a>代码解释</h4><p>生成文件目录中的<strong>node_modules</strong>文件夹和<strong>dist</strong>文件夹与 <strong>.md</strong> <strong>.swc</strong> <strong>.png</strong>的文件</p><h3 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h3><p><img src="https://s2.loli.net/2023/05/15/BJPixqAnHbIKWcV.png" alt="项目树目录"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tree </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Taro3-react-小程序 使用 第三方富文本 教程</title>
      <link href="/2023/05/13/mp-html-shi-yong-jiao-cheng/"/>
      <url>/2023/05/13/mp-html-shi-yong-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h2 id="mp-html-官方网站-小程序富文本组件-gitee-io"><a href="#mp-html-官方网站-小程序富文本组件-gitee-io" class="headerlink" title="mp- html [官方网站](小程序富文本组件 (gitee.io))"></a>mp- html [官方网站](<a href="https://jin-yufeng.gitee.io/mp-html/#/">小程序富文本组件 (gitee.io)</a>)</h2><h3 id="1-下载源文件"><a href="#1-下载源文件" class="headerlink" title="1.下载源文件"></a>1.下载源文件</h3><p><img src="https://s2.loli.net/2023/05/13/pWTG2NaUJmM7K1y.png" alt="下载源文件"></p><h3 id="2-将对应文件放入到项目中"><a href="#2-将对应文件放入到项目中" class="headerlink" title="2.将对应文件放入到项目中"></a>2.将对应文件放入到项目中</h3><h4 id="要放的文件夹"><a href="#要放的文件夹" class="headerlink" title="要放的文件夹"></a>要放的文件夹</h4><p><img src="https://s2.loli.net/2023/05/13/Pw5iVBWd9jY3NgE.png" alt="要放的文件夹"></p><h4 id="放到项目中"><a href="#放到项目中" class="headerlink" title="放到项目中"></a>放到项目中</h4><p>创建components文件夹将<strong>mp-weixin</strong>放到该目录下并且改名为<strong>mp-html</strong></p><p><img src="https://s2.loli.net/2023/05/13/Wr6tbs3hTJyGw5n.png" alt="项目"></p><h4 id="编辑文件"><a href="#编辑文件" class="headerlink" title="编辑文件"></a>编辑文件</h4><p><img src="https://s2.loli.net/2023/05/13/1loSGyfRtC3Zx9B.png" alt="编辑文件"></p><h5 id="编辑文件的内容"><a href="#编辑文件的内容" class="headerlink" title="编辑文件的内容"></a>编辑文件的内容</h5><p><img src="https://s2.loli.net/2023/05/13/Lwdtvucb7DpmVAC.png" alt="内容"></p><pre class=" language-tsx"><code class="language-tsx">usingComponents:&#123;  "mp-html": "./components/mp-html/index"&#125;</code></pre><h4 id="接下来根据官方文档的微信小程序使用教程来使用就可以了"><a href="#接下来根据官方文档的微信小程序使用教程来使用就可以了" class="headerlink" title="接下来根据官方文档的微信小程序使用教程来使用就可以了"></a>接下来根据官方文档的微信小程序使用教程来使用就可以了</h4><h3 id="3-使用插件（如编辑富文本）"><a href="#3-使用插件（如编辑富文本）" class="headerlink" title="3.使用插件（如编辑富文本）"></a>3.使用插件（如编辑富文本）</h3><ul><li><p>编辑文本</p><p><img src="https://s2.loli.net/2023/05/13/jBGoCsHmZtFd9TQ.png" alt="编辑文本"></p></li><li><p>安装依赖 重新打包</p><p><img src="https://s2.loli.net/2023/05/13/sfPJIA6yuhtSCeq.png" alt="打包"></p></li></ul><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 安装依赖</span><span class="token comment" spellcheck="true"># 通过 npm 安装</span><span class="token function">npm</span> <span class="token function">install</span><span class="token comment" spellcheck="true"># 或通过 yarn 安装</span>yarn</code></pre><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 生成微信包到 dist/mp-weixin</span><span class="token function">npm</span> run build:weixin</code></pre><h3 id="3-重新按照上面的步骤重新将打包好的文件夹放到项目中就可以了"><a href="#3-重新按照上面的步骤重新将打包好的文件夹放到项目中就可以了" class="headerlink" title="3.重新按照上面的步骤重新将打包好的文件夹放到项目中就可以了"></a>3.重新按照上面的步骤重新将打包好的文件夹放到项目中就可以了</h3><p><strong>注意</strong> 使用组件时不需要导入使用的文件中是全局导入的</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mh-mthl </tag>
            
            <tag> Taro </tag>
            
            <tag> 富文本 </tag>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
