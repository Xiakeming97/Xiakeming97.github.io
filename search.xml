<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>现在自己在使用的git提交规范配置</title>
      <link href="/2023/06/30/xian-zai-zi-ji-zai-shi-yong-de-git-ti-jiao-gui-fan-pei-zhi/"/>
      <url>/2023/06/30/xian-zai-zi-ji-zai-shi-yong-de-git-ti-jiao-gui-fan-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><ul><li>husky<br>操作 git 钩子的工具</li><li>commitlint<br>commit 信息校验工具</li><li>commitizen<br>commit 自动化提示工具，简称 cz</li><li>cz-customizable<br>可自定义的 cz 适配器</li><li>commitlint-config-git-commit-emoji<br>emoji 插件</li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="安装-husky-工具"><a href="#安装-husky-工具" class="headerlink" title="安装 husky 工具"></a>安装 husky 工具</h2><h3 id="安装-husky-插件"><a href="#安装-husky-插件" class="headerlink" title="安装 husky 插件"></a>安装 husky 插件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> husky <span class="token parameter variable">-D</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i husky <span class="token parameter variable">-D</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="在package-json中添加脚本"><a href="#在package-json中添加脚本" class="headerlink" title="在package.json中添加脚本"></a>在<code>package.json</code>中添加脚本</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> set-script prepare <span class="token string">"husky install"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> set-script prepare <span class="token string">"husky install"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="根目录创建-husky文件夹-将-git-hooks-钩子交由-husky-执行"><a href="#根目录创建-husky文件夹-将-git-hooks-钩子交由-husky-执行" class="headerlink" title="根目录创建.husky文件夹,将 git hooks 钩子交由 husky 执行"></a>根目录创建<code>.husky</code>文件夹,将 git hooks 钩子交由 husky 执行</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> prepare<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> run prepare<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="添加-commit-msg-钩子-执行信息校验"><a href="#添加-commit-msg-钩子-执行信息校验" class="headerlink" title="添加 commit-msg 钩子,执行信息校验"></a>添加 commit-msg 钩子,执行信息校验</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npx husky <span class="token function">add</span> .husky/commit-msg <span class="token string">'npx --no-install commitlint --edit "$1"'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安装-commitlint"><a href="#安装-commitlint" class="headerlink" title="安装 commitlint"></a>安装 commitlint</h2><h3 id="安装-commit-校验工具"><a href="#安装-commit-校验工具" class="headerlink" title="安装 commit 校验工具"></a>安装 commit 校验工具</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> commitlint @commitlint/config-conventional <span class="token parameter variable">-D</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i commitlint @commitlint/config-conventional <span class="token parameter variable">-D</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><strong>@commitlint&#x2F;config-conventional</strong> 这是一个规范配置,标识采用什么规范来执行消息校验, 这个默认是 Angular 的提交规范</li></ul><h3 id="创建-commitlint-config-js-配置文件"><a href="#创建-commitlint-config-js-配置文件" class="headerlink" title="创建 commitlint.config.js 配置文件"></a>创建 <code>commitlint.config.js</code> 配置文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"module.exports = &#123;extends: ['@commitlint/config-conventional']&#125;"</span> <span class="token operator">></span> commitlint.config.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安装-commitizen"><a href="#安装-commitizen" class="headerlink" title="安装 commitizen"></a>安装 commitizen</h2><h3 id="安装自动化提示工具"><a href="#安装自动化提示工具" class="headerlink" title="安装自动化提示工具"></a>安装自动化提示工具</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> commitizen cz-conventional-changelog <span class="token parameter variable">-D</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i commitizen cz-conventional-changelog <span class="token parameter variable">-D</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="package-json-中添加-commit-指令-执行-git-cz-指令"><a href="#package-json-中添加-commit-指令-执行-git-cz-指令" class="headerlink" title="package.json 中添加 commit 指令, 执行 git-cz 指令"></a><code>package.json</code> 中添加 commit 指令, 执行 <code>git-cz</code> 指令</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> set-script commit <span class="token string">"git-cz"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> set-script commit <span class="token string">"git-cz"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="初始化命令行的选项信息"><a href="#初始化命令行的选项信息" class="headerlink" title="初始化命令行的选项信息"></a>初始化命令行的选项信息</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npx commitizen init cz-conventional-changelog --save-dev --save-exact<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安装可自定义的-cz-适配器"><a href="#安装可自定义的-cz-适配器" class="headerlink" title="安装可自定义的 cz 适配器"></a>安装可自定义的 cz 适配器</h2><p>因为 commitizen 只支持英文，如果我想要支持中文指令和 emoji，那么就必须安装可自定义的 cz 适配器了</p><h3 id="安装-cz-适配器"><a href="#安装-cz-适配器" class="headerlink" title="安装 cz 适配器"></a>安装 cz 适配器</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token parameter variable">-D</span> commitlint-config-cz  cz-customizable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i <span class="token parameter variable">-D</span> commitlint-config-cz  cz-customizable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="在根目录创建-cz-config-js文件"><a href="#在根目录创建-cz-config-js文件" class="headerlink" title="在根目录创建 .cz-config.js文件"></a>在根目录创建 <code>.cz-config.js</code>文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token operator">></span> .cz-config.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="将以下配置内容复制到-cz-config-js文件中"><a href="#将以下配置内容复制到-cz-config-js文件中" class="headerlink" title="将以下配置内容复制到.cz-config.js文件中"></a>将以下配置内容复制到<code>.cz-config.js</code>文件中</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">types</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span>      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">":sparkles: feat"</span><span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"✨ feat:     新功能"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">":bug: fix"</span><span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"🐛 fix:      修复bug"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">":package: build"</span><span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"📦️ build:    打包"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">":zap: perf"</span><span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"⚡️ perf:     性能优化"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">":tada: release"</span><span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"🎉 release:  发布正式版"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">":lipstick: style"</span><span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"💄 style:    代码的样式美化"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">":recycle: refactor"</span><span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"♻️  refactor: 重构"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">":pencil2: docs"</span><span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"✏️  docs:     文档变更"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">":white_check_mark: test"</span><span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"✅ test:     测试"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">":rewind: revert"</span><span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"⏪️ revert:   回退"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">":rocket: chore"</span><span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"🚀 chore:    构建/工程依赖/工具"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span>      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">":construction_worker: ci"</span><span class="token punctuation">,</span>      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"👷 ci:       CI related changes"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">messages</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"请选择提交类型(必填)"</span><span class="token punctuation">,</span>    <span class="token literal-property property">customScope</span><span class="token operator">:</span> <span class="token string">"请输入文件修改范围(可选)"</span><span class="token punctuation">,</span>    <span class="token literal-property property">subject</span><span class="token operator">:</span> <span class="token string">"请简要描述提交(必填)"</span><span class="token punctuation">,</span>    <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token string">"请输入详细描述(可选)"</span><span class="token punctuation">,</span>    <span class="token literal-property property">breaking</span><span class="token operator">:</span> <span class="token string">"列出任何BREAKING CHANGES(可选)"</span><span class="token punctuation">,</span>    <span class="token literal-property property">footer</span><span class="token operator">:</span> <span class="token string">"请输入要关闭的issue(可选)"</span><span class="token punctuation">,</span>    <span class="token literal-property property">confirmCommit</span><span class="token operator">:</span> <span class="token string">"确定提交此说明吗？"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">allowCustomScopes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment">// 跳过问题</span>  <span class="token literal-property property">skipQuestions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"body"</span><span class="token punctuation">,</span> <span class="token string">"footer"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">subjectLimit</span><span class="token operator">:</span> <span class="token number">72</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="将-cz-customizable-脚本添加到您的-package-json"><a href="#将-cz-customizable-脚本添加到您的-package-json" class="headerlink" title="将 cz-customizable 脚本添加到您的 package.json"></a>将 cz-customizable 脚本添加到您的 <code>package.json</code></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> set-script commit <span class="token string">"git add . &amp;&amp; cz-customizable"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> set-script commit <span class="token string">"git add . &amp;&amp; cz-customizable"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安装-git-commit-emoji"><a href="#安装-git-commit-emoji" class="headerlink" title="安装 git-commit-emoji"></a>安装 git-commit-emoji</h2><h3 id="安装-emoji-插件"><a href="#安装-emoji-插件" class="headerlink" title="安装 emoji 插件"></a>安装 emoji 插件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> <span class="token parameter variable">-D</span>  commitlint-config-git-commit-emoji<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i <span class="token parameter variable">-D</span>  commitlint-config-git-commit-emoji<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="更新-commitlint-config-js"><a href="#更新-commitlint-config-js" class="headerlink" title="更新 commitlint.config.js"></a>更新 <code>commitlint.config.js</code></h3><p>移除 extends 中原来的 <code>@commitlint/config-conventional</code>，加入<code>&#39;git-commit-emoji&#39;, &#39;cz&#39;</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"git-commit-emoji"</span><span class="token punctuation">,</span> <span class="token string">"cz"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="含-emoji-的自动化提示选项列表"><a href="#含-emoji-的自动化提示选项列表" class="headerlink" title="含 emoji 的自动化提示选项列表"></a>含 emoji 的自动化提示选项列表</h3><p>使用 <code>npm run commit</code>或者<code>yarn commit</code> 代替 <code>git commit</code><br>在命令行中输入 <code>npm run commit</code>或者<code>yarn commit</code> ，即可通过键盘上下键选择需要要的 <code>commit type</code>了。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="根据-commit-message-自动生成-changelog"><a href="#根据-commit-message-自动生成-changelog" class="headerlink" title="根据 commit message 自动生成 changelog"></a>根据 commit message 自动生成 changelog</h3><h4 id="安装-conventional-changelog"><a href="#安装-conventional-changelog" class="headerlink" title="安装 conventional-changelog"></a>安装 conventional-changelog</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> conventional-changelog conventional-changelog-cli --save-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> conventional-changelog conventional-changelog-cli --save-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="将-changelog-脚本添加到您的-package-json"><a href="#将-changelog-脚本添加到您的-package-json" class="headerlink" title="将 changelog 脚本添加到您的 package.json"></a>将 changelog 脚本添加到您的 <code>package.json</code></h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> set-script changelog <span class="token string">"conventional-changelog -p cz-config.js -i CHANGELOG.md -s -r 0"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> set-script changelog <span class="token string">"conventional-changelog -p cz-config.js -i CHANGELOG.md -s -r 0"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="添加成功："><a href="#添加成功：" class="headerlink" title="添加成功："></a>添加成功：</h4><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"changelog"</span><span class="token operator">:</span> <span class="token string">"conventional-changelog -p cz-config.js -i CHANGELOG.md -s -r 0"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th align="left">指令</th><th align="center">功能</th></tr></thead><tbody><tr><td align="left">-p</td><td align="center">指定风格*</td></tr><tr><td align="left">-i</td><td align="center">CHANGELOG.md 指定输出的文件名称</td></tr><tr><td align="left">-s</td><td align="center">输出到 infile，这样就不需要指定与 outfile 相同的文件</td></tr><tr><td align="left">-r</td><td align="center">从最新的版本生成多少个版本。如果为 0，则整个更改日志将被重新生成，输出文件将被覆盖。默认值:1</td></tr><tr><td align="left">-n</td><td align="center">.&#x2F;changelog-option.js 指定自定义配置</td></tr></tbody></table><h4 id="运行命令生成最新CHANGELOG"><a href="#运行命令生成最新CHANGELOG" class="headerlink" title="运行命令生成最新CHANGELOG"></a>运行命令生成最新CHANGELOG</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> changelog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> run changelog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="使用自动化工具后，还可以用-git-commit-m-quot-quot-提交代码吗？"><a href="#使用自动化工具后，还可以用-git-commit-m-quot-quot-提交代码吗？" class="headerlink" title="使用自动化工具后，还可以用 git commit - m &quot;&quot;提交代码吗？"></a>使用自动化工具后，还可以用 <code>git commit - m &quot;&quot;</code>提交代码吗？</h3><p>可以。<br>配置自动化工具后，不仅支持<code>npm run commit</code>或者<code>yarn commit</code>自动化提示选择提交，也可以继续使用 <code>git commit - m &quot;&quot;</code>提交,只是写type的时候前面还需要加上emoji的字符串。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://blog.csdn.net/jackson_wen/article/details/127921063">Git commit校验工具commitlint的配置与使用-zhimingwen</a></p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gitmoji </tag>
            
            <tag> Comitlint </tag>
            
            <tag> 项目规范 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React获取子组件(函数组件)的方法属性</title>
      <link href="/2023/06/16/react-huo-qu-zi-zu-jian-han-shu-zu-jian-de-fang-fa-shu-xing/"/>
      <url>/2023/06/16/react-huo-qu-zi-zu-jian-han-shu-zu-jian-de-fang-fa-shu-xing/</url>
      
        <content type="html"><![CDATA[<h2 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h2><p>在父组件想通过ref的方式获取到子组件的方法或者属性时,发现不好使因为获取到的是<code>current:null</code>。经过学习了解，在react中想通过ref获取子组件的实例，子组件必须是类组件才行。关于函数组件的获取方法就有了以下的教程。</p><h2 id="用到技术"><a href="#用到技术" class="headerlink" title="用到技术"></a>用到技术</h2><ul><li>forwardRef<br><strong>forwardRef</strong> 是 React 提供的一个高阶函数（Higher-Order Function），用于在函数组件中转发 <strong>ref</strong>。<br>示例<pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> forwardRef <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span><span class="token keyword">const</span> ChildComponent <span class="token operator">=</span> <span class="token function">forwardRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> ref</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 子组件的内容</span>  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">Child Component</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> ChildComponent<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>useImperativeHandle<br><strong>useImperativeHandle</strong> 是 React 的一个钩子函数，用于在函数组件中<strong>自定义暴露给父组件的实例值或方法</strong><br>通常情况下，函数组件的内部状态和方法是对外隐藏的，父组件无法直接访问或调用。但是，在某些情况下，我们可能希望函数组件能够向外部暴露一些特定的实例值或方法，这时就可以使用 useImperativeHandle。<br>useImperativeHandle 接收两个参数：ref 和一个回调函数。回调函数可以返回一个对象，该对象中的属性和方法将会成为父组件中通过 ref 访问到的实例值或方法。<br>示例<pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> forwardRef<span class="token punctuation">,</span> useImperativeHandle <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span><span class="token keyword">const</span> ChildComponent <span class="token operator">=</span> <span class="token function">forwardRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> ref</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token function-variable function">internalMethod</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Internal method called!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token function">useImperativeHandle</span><span class="token punctuation">(</span>ref<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token function-variable function">externalMethod</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'External method called!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    internalMethod  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">Child Component</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> ChildComponent<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="完整示例"><a href="#完整示例" class="headerlink" title="完整示例"></a>完整示例</h2><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> forwardRef<span class="token punctuation">,</span> useImperativeHandle <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span><span class="token keyword">const</span> ChildComponent <span class="token operator">=</span> <span class="token function">forwardRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> ref</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token function-variable function">internalMethod</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Internal method called!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token function">useImperativeHandle</span><span class="token punctuation">(</span>ref<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token function-variable function">externalMethod</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'External method called!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    internalMethod  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">Child Component</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> ChildComponent<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> 父子组件 </tag>
            
            <tag> forwardRef </tag>
            
            <tag> useImperativeHandle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gitmoji Commit Message 使用教程</title>
      <link href="/2023/06/03/git-commit-ti-jiao-gui-fan/"/>
      <url>/2023/06/03/git-commit-ti-jiao-gui-fan/</url>
      
        <content type="html"><![CDATA[<h2 id="安装必要依赖和配置-都是在项目的根目录下执行"><a href="#安装必要依赖和配置-都是在项目的根目录下执行" class="headerlink" title="安装必要依赖和配置(都是在项目的根目录下执行)"></a>安装必要依赖和配置(都是在项目的根目录下执行)</h2><h3 id="安装-commitlint-与-commitlint-config-gitmoji-依赖。"><a href="#安装-commitlint-与-commitlint-config-gitmoji-依赖。" class="headerlink" title="安装 commitlint 与 commitlint-config-gitmoji 依赖。"></a>安装 commitlint 与 commitlint-config-gitmoji 依赖。</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> <span class="token parameter variable">-D</span> commitlint-config-gitmoji commitlint<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"module.exports = &#123;extends: ['gitmoji']&#125;;"</span> <span class="token operator">></span> commitlint.config.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里是启用gitmoji</p><h3 id="安装husky"><a href="#安装husky" class="headerlink" title="安装husky"></a>安装husky</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> husky <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="添加hook"><a href="#添加hook" class="headerlink" title="添加hook"></a>添加hook</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npx husky <span class="token function">add</span> .husky/commit-msg  <span class="token string">'npx --no -- commitlint --edit $&#123;1&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="添加配置项"><a href="#添加配置项" class="headerlink" title="添加配置项"></a>添加配置项</h3><p>在 <code>package.json</code> 文件中添加 <code>husky</code> 配置</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"husky"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"hooks"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"commit-msg"</span><span class="token operator">:</span> <span class="token string">"commitlint -e $HUSKY_GIT_PARAMS"</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gitmoji </tag>
            
            <tag> Comitlint </tag>
            
            <tag> 项目规范 </tag>
            
            <tag> Gitmoji Commit Message </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Umijs项目中的请求封装</title>
      <link href="/2023/06/02/umijs-xiang-mu-zhong-de-qing-qiu-feng-zhuang/"/>
      <url>/2023/06/02/umijs-xiang-mu-zhong-de-qing-qiu-feng-zhuang/</url>
      
        <content type="html"><![CDATA[<h2 id="项目依赖"><a href="#项目依赖" class="headerlink" title="项目依赖"></a>项目依赖</h2><ul><li><code>&quot;umi&quot;: &quot;^3.5.35&quot;,</code></li></ul><h2 id="文件配置"><a href="#文件配置" class="headerlink" title="文件配置"></a>文件配置</h2><h3 id="在src-x2F-app-js文件中写入以下代码"><a href="#在src-x2F-app-js文件中写入以下代码" class="headerlink" title="在src&#x2F;app.js文件中写入以下代码"></a>在src&#x2F;app.js文件中写入以下代码</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 导入依赖</span><span class="token keyword">import</span> httpErrorMessage <span class="token keyword">from</span> <span class="token string">'@/network/httpErrorMessage.js'</span><span class="token punctuation">;</span> <span class="token comment">// 处理请求异常的文字集合</span><span class="token keyword">import</span> codeErrorMessage <span class="token keyword">from</span> <span class="token string">'@/network/codeErrorMessage.js'</span><span class="token punctuation">;</span> <span class="token comment">// 处理根据自身业务定义的请求异常的文字集合</span><span class="token keyword">import</span> urlsWithoutToken <span class="token keyword">from</span> <span class="token string">'@/network/urlsWithoutToken.js'</span><span class="token punctuation">;</span> <span class="token comment">// 不需要携带token URL集合</span><span class="token comment">// 请求封装</span><span class="token keyword">const</span> lang <span class="token operator">=</span> <span class="token string">'zh-CN'</span><span class="token punctuation">;</span> <span class="token comment">// zh-CN | en-US</span><span class="token comment">// 服务器请求错误状态处理</span><span class="token keyword">const</span> <span class="token function-variable function">errorHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> response <span class="token punctuation">&#125;</span> <span class="token operator">=</span> error<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>response <span class="token operator">&amp;&amp;</span> response<span class="token punctuation">.</span>status<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> errorText <span class="token operator">=</span>      httpErrorMessage<span class="token punctuation">[</span>lang<span class="token punctuation">]</span><span class="token punctuation">[</span>response<span class="token punctuation">.</span>status<span class="token punctuation">]</span> <span class="token operator">||</span> response<span class="token punctuation">.</span>statusText<span class="token punctuation">;</span>    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>errorText<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> response<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  errorHandler<span class="token punctuation">,</span>  <span class="token literal-property property">requestInterceptors</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token comment">// 请求拦截器，接收数组，可设置多个拦截器</span>    <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> shouldIncludeToken <span class="token operator">=</span> <span class="token operator">!</span>urlsWithoutToken<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 判断是否需要携带token</span>      <span class="token keyword">const</span> modifiedOptions <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token operator">...</span>options<span class="token punctuation">,</span>        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token operator">...</span><span class="token punctuation">(</span>options<span class="token operator">?.</span>data <span class="token operator">??</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 可在这里对数据中统一处理</span>        <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>          <span class="token operator">...</span><span class="token punctuation">(</span>options<span class="token operator">?.</span>headers <span class="token operator">??</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token operator">...</span><span class="token punctuation">(</span>shouldIncludeToken <span class="token operator">&amp;&amp;</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">Authorization</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'ACCESS_TOKEN'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token comment">// 携带token</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span>modifiedOptions<span class="token punctuation">,</span> <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/dev</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>options<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token comment">// 修改URL只能走这样的方法</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">responseInterceptors</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token comment">// 相应拦截器，也接受数组</span>    <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// token过期的时候自动刷新获取新的token自动登录，当然这是根据自己页面的需求决定，大多都是token过期跳转登录页面，重新登陆</span>          localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token string">'ACCESS_TOKEN'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token string">'USERNAME'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 后端规定了一些自定义返回的errorCode码，返回后端的自定义提示信息</span>          <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>messageCode<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> errorText <span class="token operator">=</span>              codeErrorMessage<span class="token punctuation">[</span>lang<span class="token punctuation">]</span><span class="token punctuation">[</span>data<span class="token punctuation">.</span>messageCode<span class="token punctuation">]</span> <span class="token operator">||</span>              codeErrorMessage<span class="token punctuation">[</span>lang<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">10000</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//  codeErrorMessage支持多语言环境的json文件，和httpErrorMessage 一样写法</span>            <span class="token comment">// debugger</span>            message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>errorText<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token operator">!</span>data<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 后端返回200但数据为空的情况</span>            <span class="token keyword">return</span> data<span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>          lang <span class="token operator">==</span> <span class="token string">'zh-CN'</span>            <span class="token operator">?</span> <span class="token string">'您的网络发生异常，无法连接服务器'</span>            <span class="token operator">:</span> <span class="token string">'Your network is abnormal and you cannot connect to the server'</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">return</span> response<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="httpErrorMessage-js"><a href="#httpErrorMessage-js" class="headerlink" title="httpErrorMessage.js"></a>httpErrorMessage.js</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> httpErrorMessage <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token string-property property">'en-US'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token number">200</span><span class="token operator">:</span> <span class="token string">'The server successfully returned the requested data.'</span><span class="token punctuation">,</span>    <span class="token number">201</span><span class="token operator">:</span> <span class="token string">'Data is created or modified successfully. Procedure'</span><span class="token punctuation">,</span>    <span class="token number">202</span><span class="token operator">:</span> <span class="token string">'A request has been queued in the background (asynchronous task).'</span><span class="token punctuation">,</span>    <span class="token number">204</span><span class="token operator">:</span> <span class="token string">'Succeeded in deleting data. Procedure'</span><span class="token punctuation">,</span>    <span class="token number">400</span><span class="token operator">:</span> <span class="token string">'The server did not create or modify data.'</span><span class="token punctuation">,</span>    <span class="token number">401</span><span class="token operator">:</span> <span class="token string">'User does not have permission (wrong token, username, password).'</span><span class="token punctuation">,</span>    <span class="token number">403</span><span class="token operator">:</span> <span class="token string">'The user is authorized, but access is prohibited.'</span><span class="token punctuation">,</span>    <span class="token number">404</span><span class="token operator">:</span> <span class="token string">'The request was made for a nonexistent record, and the server did not act on it.'</span><span class="token punctuation">,</span>    <span class="token number">406</span><span class="token operator">:</span> <span class="token string">'The requested format is not available.'</span><span class="token punctuation">,</span>    <span class="token number">410</span><span class="token operator">:</span> <span class="token string">'The requested resource is permanently deleted and will not be retrieved.'</span><span class="token punctuation">,</span>    <span class="token number">422</span><span class="token operator">:</span> <span class="token string">'A validation error occurred while creating an object.'</span><span class="token punctuation">,</span>    <span class="token number">500</span><span class="token operator">:</span> <span class="token string">'An error occurred on the server. Check the server.'</span><span class="token punctuation">,</span>    <span class="token number">502</span><span class="token operator">:</span> <span class="token string">'Gateway error.'</span><span class="token punctuation">,</span>    <span class="token number">503</span><span class="token operator">:</span> <span class="token string">'The service is unavailable, the server is temporarily overloaded or maintained.'</span><span class="token punctuation">,</span>    <span class="token number">504</span><span class="token operator">:</span> <span class="token string">'The gateway timed out.'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token string-property property">'zh-CN'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token number">200</span><span class="token operator">:</span> <span class="token string">'服务器成功返回请求的数据。'</span><span class="token punctuation">,</span>    <span class="token number">201</span><span class="token operator">:</span> <span class="token string">'新建或修改数据成功。'</span><span class="token punctuation">,</span>    <span class="token number">202</span><span class="token operator">:</span> <span class="token string">'一个请求已经进入后台排队（异步任务）。'</span><span class="token punctuation">,</span>    <span class="token number">204</span><span class="token operator">:</span> <span class="token string">'删除数据成功。'</span><span class="token punctuation">,</span>    <span class="token number">400</span><span class="token operator">:</span> <span class="token string">'发出的请求有错误，服务器没有进行新建或修改数据的操作。'</span><span class="token punctuation">,</span>    <span class="token number">401</span><span class="token operator">:</span> <span class="token string">'用户没有权限（令牌、用户名、密码错误）。'</span><span class="token punctuation">,</span>    <span class="token number">403</span><span class="token operator">:</span> <span class="token string">'用户得到授权，但是访问是被禁止的。'</span><span class="token punctuation">,</span>    <span class="token number">404</span><span class="token operator">:</span> <span class="token string">'发出的请求针对的是不存在的记录，服务器没有进行操作。'</span><span class="token punctuation">,</span>    <span class="token number">406</span><span class="token operator">:</span> <span class="token string">'请求的格式不可得。'</span><span class="token punctuation">,</span>    <span class="token number">410</span><span class="token operator">:</span> <span class="token string">'请求的资源被永久删除，且不会再得到的。'</span><span class="token punctuation">,</span>    <span class="token number">422</span><span class="token operator">:</span> <span class="token string">'当创建一个对象时，发生一个验证错误。'</span><span class="token punctuation">,</span>    <span class="token number">500</span><span class="token operator">:</span> <span class="token string">'服务器发生错误，请检查服务器。'</span><span class="token punctuation">,</span>    <span class="token number">502</span><span class="token operator">:</span> <span class="token string">'网关错误。'</span><span class="token punctuation">,</span>    <span class="token number">503</span><span class="token operator">:</span> <span class="token string">'服务不可用，服务器暂时过载或维护。'</span><span class="token punctuation">,</span>    <span class="token number">504</span><span class="token operator">:</span> <span class="token string">'网关超时。'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> httpErrorMessage<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="codeErrorMessage-js-这里我没有做什么自定义（因为自身业务不需要）"><a href="#codeErrorMessage-js-这里我没有做什么自定义（因为自身业务不需要）" class="headerlink" title="codeErrorMessage.js 这里我没有做什么自定义（因为自身业务不需要）"></a>codeErrorMessage.js 这里我没有做什么自定义（因为自身业务不需要）</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> codeErrorMessage <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token string-property property">'en-US'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token number">200</span><span class="token operator">:</span> <span class="token string">'The server successfully returned the requested data.'</span><span class="token punctuation">,</span>    <span class="token number">201</span><span class="token operator">:</span> <span class="token string">'Data is created or modified successfully. Procedure'</span><span class="token punctuation">,</span>    <span class="token number">202</span><span class="token operator">:</span> <span class="token string">'A request has been queued in the background (asynchronous task).'</span><span class="token punctuation">,</span>    <span class="token number">204</span><span class="token operator">:</span> <span class="token string">'Succeeded in deleting data. Procedure'</span><span class="token punctuation">,</span>    <span class="token number">400</span><span class="token operator">:</span> <span class="token string">'The server did not create or modify data.'</span><span class="token punctuation">,</span>    <span class="token number">401</span><span class="token operator">:</span> <span class="token string">'User does not have permission (wrong token, username, password).'</span><span class="token punctuation">,</span>    <span class="token number">403</span><span class="token operator">:</span> <span class="token string">'The user is authorized, but access is prohibited.'</span><span class="token punctuation">,</span>    <span class="token number">404</span><span class="token operator">:</span> <span class="token string">'The request was made for a nonexistent record, and the server did not act on it.'</span><span class="token punctuation">,</span>    <span class="token number">406</span><span class="token operator">:</span> <span class="token string">'The requested format is not available.'</span><span class="token punctuation">,</span>    <span class="token number">410</span><span class="token operator">:</span> <span class="token string">'The requested resource is permanently deleted and will not be retrieved.'</span><span class="token punctuation">,</span>    <span class="token number">422</span><span class="token operator">:</span> <span class="token string">'A validation error occurred while creating an object.'</span><span class="token punctuation">,</span>    <span class="token number">500</span><span class="token operator">:</span> <span class="token string">'An error occurred on the server. Check the server.'</span><span class="token punctuation">,</span>    <span class="token number">502</span><span class="token operator">:</span> <span class="token string">'Gateway error.'</span><span class="token punctuation">,</span>    <span class="token number">503</span><span class="token operator">:</span> <span class="token string">'The service is unavailable, the server is temporarily overloaded or maintained.'</span><span class="token punctuation">,</span>    <span class="token number">504</span><span class="token operator">:</span> <span class="token string">'The gateway timed out.'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token string-property property">'zh-CN'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token number">200</span><span class="token operator">:</span> <span class="token string">'服务器成功返回请求的数据。'</span><span class="token punctuation">,</span>    <span class="token number">201</span><span class="token operator">:</span> <span class="token string">'新建或修改数据成功。'</span><span class="token punctuation">,</span>    <span class="token number">202</span><span class="token operator">:</span> <span class="token string">'一个请求已经进入后台排队（异步任务）。'</span><span class="token punctuation">,</span>    <span class="token number">204</span><span class="token operator">:</span> <span class="token string">'删除数据成功。'</span><span class="token punctuation">,</span>    <span class="token number">400</span><span class="token operator">:</span> <span class="token string">'发出的请求有错误，服务器没有进行新建或修改数据的操作。'</span><span class="token punctuation">,</span>    <span class="token number">401</span><span class="token operator">:</span> <span class="token string">'用户没有权限（令牌、用户名、密码错误）。'</span><span class="token punctuation">,</span>    <span class="token number">403</span><span class="token operator">:</span> <span class="token string">'用户得到授权，但是访问是被禁止的。'</span><span class="token punctuation">,</span>    <span class="token number">404</span><span class="token operator">:</span> <span class="token string">'发出的请求针对的是不存在的记录，服务器没有进行操作。'</span><span class="token punctuation">,</span>    <span class="token number">406</span><span class="token operator">:</span> <span class="token string">'请求的格式不可得。'</span><span class="token punctuation">,</span>    <span class="token number">410</span><span class="token operator">:</span> <span class="token string">'请求的资源被永久删除，且不会再得到的。'</span><span class="token punctuation">,</span>    <span class="token number">422</span><span class="token operator">:</span> <span class="token string">'当创建一个对象时，发生一个验证错误。'</span><span class="token punctuation">,</span>    <span class="token number">500</span><span class="token operator">:</span> <span class="token string">'服务器发生错误，请检查服务器。'</span><span class="token punctuation">,</span>    <span class="token number">502</span><span class="token operator">:</span> <span class="token string">'网关错误。'</span><span class="token punctuation">,</span>    <span class="token number">503</span><span class="token operator">:</span> <span class="token string">'服务不可用，服务器暂时过载或维护。'</span><span class="token punctuation">,</span>    <span class="token number">504</span><span class="token operator">:</span> <span class="token string">'网关超时。'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> codeErrorMessage<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="urlsWithoutToken-js"><a href="#urlsWithoutToken-js" class="headerlink" title="urlsWithoutToken.js"></a>urlsWithoutToken.js</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 不需要携带token的url数组</span><span class="token keyword">const</span> urlsWithoutToken <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> urlsWithoutToken<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="简单使用方式-配合dva使用"><a href="#简单使用方式-配合dva使用" class="headerlink" title="简单使用方式(配合dva使用)"></a>简单使用方式(配合dva使用)</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 导入依赖</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> request <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'umi'</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getApi</span><span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string">'/xxx/xxx'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'GET'</span><span class="token punctuation">,</span>    params<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// dva中示例代码</span><span class="token keyword">yield</span> <span class="token function">call</span><span class="token punctuation">(</span>getApi<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'xxx'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="更多资料"><a href="#更多资料" class="headerlink" title="更多资料"></a>更多资料</h2><ul><li><p><a href="https://v3.umijs.org/zh-CN/plugins/plugin-request#request">@umijs&#x2F;plugin-request</a></p></li><li><p><a href="https://github.com/umijs/umi-request">umijs&#x2F;umi-request: A request tool based on fetch. (github.com)</a></p></li><li><p><a href="https://blog.csdn.net/huanhuan03/article/details/120652598">umi使用plugin-request进行请求的全局配置_umi4 request</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/106796295">useRequest- 蚂蚁中台标准请求 Hooks</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Umijs </tag>
            
            <tag> plugin-request </tag>
            
            <tag> 数据请求封装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React开发规范</title>
      <link href="/2023/05/31/react-kai-fa-gui-fan/"/>
      <url>/2023/05/31/react-kai-fa-gui-fan/</url>
      
        <content type="html"><![CDATA[<h2 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h2><p>1、缩进 4 个空格，如果是 tab 也设置成 4 个空格</p><p>2、命名时尽量用英文，文件名，组件名等，单词多的可以大写简写 <a href="https://varbook.uiuing.com/">英文不好的可以使用该网站</a></p><p>3、函数名字尽量以 handle 开头，如 handleSubmit &#x3D; () &#x3D;&gt;{}；尽量使用动词开头</p><table><thead><tr><th>动词</th><th>含义</th></tr></thead><tbody><tr><td>can</td><td>判断是否可执行某个动作</td></tr><tr><td>has</td><td>判断是否含有某个值</td></tr><tr><td>is</td><td>判断是否为某个值</td></tr><tr><td>get</td><td>获取某个值</td></tr><tr><td>set</td><td>设置某个值</td></tr></tbody></table><p>4、文件夹命名统一小写； 组件，或者类名,首字母全部大写，遵守驼峰命名法；</p><p>​ img 存放图片 app APP 一些 component artcomponent 一些 art 组件</p><p>5、</p><h2 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h2><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token comment">// node_modules</span><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> Component <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Form<span class="token punctuation">,</span> Card<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> Divider<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Alert <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"antd"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> connect <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"dva"</span><span class="token punctuation">;</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">"umi/router"</span><span class="token punctuation">;</span><span class="token keyword">import</span> PropTypes <span class="token keyword">from</span> <span class="token string">"prop-types"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> PageHeaderWrapper <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@ant-design/pro-layout"</span><span class="token punctuation">;</span><span class="token comment">// 项目公共模块</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> CustomFormHOC <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@/components/FormWidget"</span><span class="token punctuation">;</span><span class="token comment">// 当前业务耦合模块</span><span class="token keyword">import</span> TransportInfo <span class="token keyword">from</span> <span class="token string">"./TransportInfo"</span><span class="token punctuation">;</span><span class="token keyword">import</span> RecordInfo <span class="token keyword">from</span> <span class="token string">"./RecordInfo"</span><span class="token punctuation">;</span><span class="token comment">// 样式文件</span><span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">"./index.less"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> 开发规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Umijs项目使用dva配合redux-persist做持久化处理</title>
      <link href="/2023/05/26/umijs-xiang-mu-shi-yong-dva-zhong-zuo-chi-jiu-hua-chu-li/"/>
      <url>/2023/05/26/umijs-xiang-mu-shi-yong-dva-zhong-zuo-chi-jiu-hua-chu-li/</url>
      
        <content type="html"><![CDATA[<h2 id="为什么要做数据持久化"><a href="#为什么要做数据持久化" class="headerlink" title="为什么要做数据持久化"></a>为什么要做数据持久化</h2><p>在项目中有的数据需要从后端获取同时这个数据又是全局使用的，不能因为一刷新就重新从后端获取。这样不现实，所以就可以使用到数据持久化并且使用<strong>dva</strong>配合<strong>redux-persist</strong>实现的数据持久化改动的代码特别少，可以说是几乎没有。</p><h2 id="教程项目各依赖版本"><a href="#教程项目各依赖版本" class="headerlink" title="教程项目各依赖版本"></a>教程项目各依赖版本</h2><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"react"</span><span class="token operator">:</span> <span class="token string">"17.x"</span><span class="token punctuation">,</span><span class="token property">"react-dom"</span><span class="token operator">:</span> <span class="token string">"17.x"</span><span class="token punctuation">,</span><span class="token property">"redux-persist"</span><span class="token operator">:</span> <span class="token string">"^6.0.0"</span><span class="token punctuation">,</span><span class="token property">"umi"</span><span class="token operator">:</span> <span class="token string">"^3.5.35"</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安装redux-persist"><a href="#安装redux-persist" class="headerlink" title="安装redux-persist"></a>安装redux-persist</h2><p>在umijs项目中开启dva数据状态管理后，可以通过npm的方式来安装redux-persist</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i redux-persist<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="更改Umijs的配置"><a href="#更改Umijs的配置" class="headerlink" title="更改Umijs的配置"></a>更改Umijs的配置</h2><p>在<strong>在src&#x2F;app.js</strong>文件中添加以下配置 </p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> persistStore<span class="token punctuation">,</span>persistReducer <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'redux-persist'</span><span class="token punctuation">;</span><span class="token keyword">import</span> storage <span class="token keyword">from</span> <span class="token string">'redux-persist/lib/storage'</span><span class="token punctuation">;</span><span class="token keyword">const</span> persistConfig <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'root'</span><span class="token punctuation">,</span>  storage<span class="token punctuation">,</span>  <span class="token literal-property property">whitelist</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'enumerate'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 配置白名单 里面写需要配置的名字 也就是dva文件的namespace</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 数据持久化</span><span class="token keyword">const</span> <span class="token function-variable function">persistEnhancer</span> <span class="token operator">=</span>  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token parameter">createStore</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token parameter">reducer<span class="token punctuation">,</span> initialState<span class="token punctuation">,</span> enhancer</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>      <span class="token function">persistReducer</span><span class="token punctuation">(</span>persistConfig<span class="token punctuation">,</span> reducer<span class="token punctuation">)</span><span class="token punctuation">,</span>      initialState<span class="token punctuation">,</span>      enhancer<span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> persist <span class="token operator">=</span> <span class="token function">persistStore</span><span class="token punctuation">(</span>store<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span>store<span class="token punctuation">,</span> persist <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> dva <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">config</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">extraEnhancers</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">persistEnhancer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="更多资料访问官网"><a href="#更多资料访问官网" class="headerlink" title="更多资料访问官网"></a>更多资料访问<a href="https://github.com/rt2zz/redux-persist">官网</a></h2>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Umijs </tag>
            
            <tag> dva </tag>
            
            <tag> redux-persist </tag>
            
            <tag> 数据持久化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tree在mac中的使用</title>
      <link href="/2023/05/15/tree-zai-mac-zhong-de-shi-yong/"/>
      <url>/2023/05/15/tree-zai-mac-zhong-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在mac电脑中要使用tree需要安装，本教程使用的是<a href="https://brew.sh/index_zh-cn"> Homebrew</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> tree<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="使用tree"><a href="#使用tree" class="headerlink" title="使用tree"></a>使用tree</h2><h3 id="tree命令行参数："><a href="#tree命令行参数：" class="headerlink" title="tree命令行参数："></a>tree命令行参数：</h3><ul><li>-a 显示所有文件和目录。</li><li>-A 使用ASNI绘图字符显示树状图而非以ASCII字符组合。</li><li>-C 在文件和目录清单加上色彩，便于区分各种类型。</li><li>-d 显示目录名称而非内容。</li><li>-D 列出文件或目录的更改时间。</li><li>-f 在每个文件或目录之前，显示完整的相对路径名称。</li><li>-F 在执行文件，目录，Socket，符号连接，管道名称名称，各自加上”*”,”&#x2F;“,”&#x3D;”,”@”,”|“号。</li><li>-g 列出文件或目录的所属群组名称，没有对应的名称时，则显示群组识别码。</li><li>-i 不以阶梯状列出文件或目录名称。</li><li>-I 不显示符合范本样式的文件或目录名称。</li><li>-l 如遇到性质为符号连接的目录，直接列出该连接所指向的原始目录。</li><li>-n 不在文件和目录清单加上色彩。</li><li>-N 直接列出文件和目录名称，包括控制字符。</li><li>-p 列出权限标示。</li><li>-P 只显示符合范本样式的文件或目录名称。</li><li>-q 用”?”号取代控制字符，列出文件和目录名称。</li><li>-s 列出文件或目录大小。</li><li>-t 用文件和目录的更改时间排序。</li><li>-u 列出文件或目录的拥有者名称，没有对应的名称时，则显示用户识别码。</li><li>-x 将范围局限在现行的文件系统中，若指定目录下的某些子目录，其存放于另一个文件系统上，则将该子目录予以排除在寻找范围外。</li></ul><h3 id="使用例子"><a href="#使用例子" class="headerlink" title="使用例子"></a>使用例子</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tree <span class="token parameter variable">-I</span> <span class="token string">"node_modules"</span> <span class="token parameter variable">-I</span> <span class="token string">"dist"</span> <span class="token parameter variable">-I</span> <span class="token string">"*.md"</span> <span class="token parameter variable">-I</span> <span class="token string">".swc"</span> <span class="token parameter variable">-I</span> <span class="token string">"*.png"</span> <span class="token operator">></span> tree.md<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="代码解释"><a href="#代码解释" class="headerlink" title="代码解释"></a>代码解释</h4><p>生成文件目录中的<strong>node_modules</strong>文件夹和<strong>dist</strong>文件夹与 <strong>.md</strong> <strong>.swc</strong> <strong>.png</strong>的文件</p><h3 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h3><p><img src="https://s2.loli.net/2023/05/15/BJPixqAnHbIKWcV.png" alt="项目树目录"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tree </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Taro3-react-小程序 使用 第三方富文本 教程</title>
      <link href="/2023/05/13/mp-html-shi-yong-jiao-cheng/"/>
      <url>/2023/05/13/mp-html-shi-yong-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h2 id="mp-html-官方网站-小程序富文本组件-gitee-io"><a href="#mp-html-官方网站-小程序富文本组件-gitee-io" class="headerlink" title="mp- html [官方网站](小程序富文本组件 (gitee.io))"></a>mp- html [官方网站](<a href="https://jin-yufeng.gitee.io/mp-html/#/">小程序富文本组件 (gitee.io)</a>)</h2><h3 id="1-下载源文件"><a href="#1-下载源文件" class="headerlink" title="1.下载源文件"></a>1.下载源文件</h3><p><img src="https://s2.loli.net/2023/05/13/pWTG2NaUJmM7K1y.png" alt="下载源文件"></p><h3 id="2-将对应文件放入到项目中"><a href="#2-将对应文件放入到项目中" class="headerlink" title="2.将对应文件放入到项目中"></a>2.将对应文件放入到项目中</h3><h4 id="要放的文件夹"><a href="#要放的文件夹" class="headerlink" title="要放的文件夹"></a>要放的文件夹</h4><p><img src="https://s2.loli.net/2023/05/13/Pw5iVBWd9jY3NgE.png" alt="要放的文件夹"></p><h4 id="放到项目中"><a href="#放到项目中" class="headerlink" title="放到项目中"></a>放到项目中</h4><p>创建components文件夹将<strong>mp-weixin</strong>放到该目录下并且改名为<strong>mp-html</strong></p><p><img src="https://s2.loli.net/2023/05/13/Wr6tbs3hTJyGw5n.png" alt="项目"></p><h4 id="编辑文件"><a href="#编辑文件" class="headerlink" title="编辑文件"></a>编辑文件</h4><p><img src="https://s2.loli.net/2023/05/13/1loSGyfRtC3Zx9B.png" alt="编辑文件"></p><h5 id="编辑文件的内容"><a href="#编辑文件的内容" class="headerlink" title="编辑文件的内容"></a>编辑文件的内容</h5><p><img src="https://s2.loli.net/2023/05/13/Lwdtvucb7DpmVAC.png" alt="内容"></p><pre class=" language-tsx"><code class="language-tsx">usingComponents:&#123;  "mp-html": "./components/mp-html/index"&#125;</code></pre><h4 id="接下来根据官方文档的微信小程序使用教程来使用就可以了"><a href="#接下来根据官方文档的微信小程序使用教程来使用就可以了" class="headerlink" title="接下来根据官方文档的微信小程序使用教程来使用就可以了"></a>接下来根据官方文档的微信小程序使用教程来使用就可以了</h4><h3 id="3-使用插件（如编辑富文本）"><a href="#3-使用插件（如编辑富文本）" class="headerlink" title="3.使用插件（如编辑富文本）"></a>3.使用插件（如编辑富文本）</h3><ul><li><p>编辑文本</p><p><img src="https://s2.loli.net/2023/05/13/jBGoCsHmZtFd9TQ.png" alt="编辑文本"></p></li><li><p>安装依赖 重新打包</p><p><img src="https://s2.loli.net/2023/05/13/sfPJIA6yuhtSCeq.png" alt="打包"></p></li></ul><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 安装依赖</span><span class="token comment" spellcheck="true"># 通过 npm 安装</span><span class="token function">npm</span> <span class="token function">install</span><span class="token comment" spellcheck="true"># 或通过 yarn 安装</span>yarn</code></pre><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 生成微信包到 dist/mp-weixin</span><span class="token function">npm</span> run build:weixin</code></pre><h3 id="3-重新按照上面的步骤重新将打包好的文件夹放到项目中就可以了"><a href="#3-重新按照上面的步骤重新将打包好的文件夹放到项目中就可以了" class="headerlink" title="3.重新按照上面的步骤重新将打包好的文件夹放到项目中就可以了"></a>3.重新按照上面的步骤重新将打包好的文件夹放到项目中就可以了</h3><p><strong>注意</strong> 使用组件时不需要导入使用的文件中是全局导入的</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mh-mthl </tag>
            
            <tag> Taro </tag>
            
            <tag> 富文本 </tag>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
